{"version":3,"sources":["components/product_data.js","components/Navbar.js","components/Products.js","components/Overview.js","components/ContactForm.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["products2","name","price","url","info","id","amount","Navbar","href","Product","product","addAmount","reduceAmount","resetAmount","useState","show","setShow","className","onClick","e","src","alt","Products","cartProducts","setCartProducts","tempAddAmount","map","cartProduct","tempReduceAmount","tempResetCart","key","Overview","ContactForm","newUser","setNewUser","newEmail","setNewEmail","newAddress","setNewAddress","newMobile","setNewMobile","newMail","setNewMail","for","onChange","target","value","type","Cart","show1","setShow1","filter","products","reduce","a","b","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85a74182.chunk.js","sourcesContent":["let products2 = [{\r\n    name: \"Mug\",\r\n    price:48,\r\n    url: \"https://image.shutterstock.com/image-photo/man-white-shirt-holding-coffee-600w-1125919634.jpg\",\r\n    info: \"Great for sipping that delicious coffee!\",\r\n    id:1,\r\n    amount:0\r\n  },\r\n{\r\n    name: \"Hat\",\r\n    price:20 ,\r\n    url: \"https://image.shutterstock.com/image-photo/blank-black-baseball-caphat-4-600w-708301330.jpg\",\r\n    info:\"Add some great swagger to your wardrobe!\",\r\n    id:2,\r\n    amount:0\r\n},\r\n{\r\n    name: \"T-shirt\",\r\n    price:300 ,\r\n    url: \"https://image.shutterstock.com/image-photo/black-tshirt-clothes-on-isolated-600w-599532212.jpg\",\r\n    info: \"Some more of that great swagger you've been requesting for!\",\r\n    id:3,\r\n    amount:0\r\n},\r\n{\r\n    name: \"Poster\",\r\n    price:24,\r\n    url: \"https://image.shutterstock.com/image-photo/white-poster-on-rope-600w-124404496.jpg\",\r\n    info: \"This is truly a masterpiece!\",\r\n    id:4,\r\n    amount:0\r\n}]\r\n\r\n  export default products2;","import React from 'react';\r\n\r\nconst Navbar = ()=>{\r\n    return(\r\n       <div>\r\n\r\n              <ul id=\"nav\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a href=\"#\">FAQ</a></li>\r\n              </ul>\r\n\r\n            </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport '../App.css';\r\n\r\n\r\n// destrukturointi eli olion atribuutit otetaan \"ulos\" muuttujiin\r\n\r\nconst Product = ({ product, addAmount, reduceAmount, resetAmount }) => {\r\n    const [show, setShow] = useState(false)\r\n    return (\r\n    <div className=\"product\">\r\n    <h1 onClick={e => setShow(!show)}>{product.name}</h1>\r\n    <img src={product.url} alt=\"kuva\" />\r\n    <p>Hinta: {product.price}€</p>\r\n    <button onClick={() =>addAmount(product.id) }>+</button>\r\n    <p>{product.amount} KPL</p>\r\n    <button onClick={() =>reduceAmount(product.id) }>-</button>\r\n    <button onClick={() =>resetAmount(product.id) }>Reset</button>\r\n    {show &&\r\n    <div className=\"lisää\">\r\n    <p>{product.info}</p>\r\n    </div>}\r\n    </div>\r\n    \r\n    )\r\n   }\r\n\r\nconst Products = ({cartProducts, setCartProducts}) => {\r\n\r\n   \r\n\r\n    const addAmount = id => {\r\n       const tempAddAmount = cartProducts.map(cartProduct => {\r\n           if(cartProduct.id === id){\r\n            cartProduct = {...cartProduct, amount: (cartProduct.amount + 1)};\r\n           }\r\n           return cartProduct;\r\n       })\r\n     setCartProducts(tempAddAmount);\r\n    } \r\n\r\n    const reduceAmount = id => {\r\n        const tempReduceAmount = cartProducts.map(cartProduct => {\r\n            if(cartProduct.id === id){\r\n             cartProduct = {...cartProduct, amount: (cartProduct.amount - 1)};\r\n            }\r\n            return cartProduct;\r\n        })\r\n      setCartProducts(tempReduceAmount);\r\n     } \r\n\r\n     const resetAmount = () => {\r\n        const tempResetCart = cartProducts.map(cartProduct => {\r\n            cartProduct = {...cartProduct, amount: 0};\r\n            return cartProduct;\r\n        });\r\n        setCartProducts(tempResetCart);\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className = \"ProductPart\">\r\n        {cartProducts.map(product => <Product key={product.id} product={product} addAmount={addAmount} reduceAmount={reduceAmount} resetAmount={resetAmount} />)}\r\n         \r\n        </div>\r\n)\r\n}\r\n\r\nexport default Products;","import React, {useState} from \"react\";\r\nimport Cart from \"./Cart\"\r\nimport products from \"./product_data\";\r\nimport Products from \"./Products\";\r\nimport ContactForm from \"./ContactForm\"\r\n\r\n\r\nconst Overview = ({product, cartProducts, setCartProducts }) => {\r\n    return (\r\n        <div className=\"cartpart\">\r\n            <h2>Kiitos tilauksestasi!</h2>   \r\n                </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Overview;","import React, { useState } from 'react';\r\nimport Overview from \"./Overview\"\r\n\r\nconst ContactForm = () => {\r\n    const [show, setShow] = useState(false)\r\n    const [newUser, setNewUser] = useState(\"\") //tilamuuttuja\r\n    const [newEmail, setNewEmail] = useState(\"\")\r\n    const [newAddress, setNewAddress] = useState(\"\")\r\n    const [newMobile, setNewMobile] = useState(\"\")\r\n    const [newMail, setNewMail] = useState(\"\")\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"contact\">\r\n            <label for=\"user\">Name</label><br/>\r\n            <input onChange={e=>setNewUser(e.target.value)} type=\"text\" id=\"user\" value={newUser}/><br/>\r\n            <label for=\"email\">Email</label><br/>\r\n            <input onChange={e=>setNewEmail(e.target.value)} type=\"email\" id=\"email\" value={newEmail}/><br/>\r\n            <label for=\"address\">Address</label><br/>\r\n            <input onChange={e=>setNewAddress(e.target.value)} type=\"text\" id=\"address\" value={newAddress}/><br/> \r\n            <label for=\"mobile\">Number</label><br/>\r\n            <input onChange={e=>setNewMobile(e.target.value)} type=\"text\" id=\"mobile\" value={newMobile}/> <br/>\r\n            <label for=\"mail\">Mail address</label><br/>\r\n            <input onChange={e=>setNewMail(e.target.value)} type=\"text\" id=\"mail\" value={newMail}/> <br/>\r\n            <button onClick={() => setShow(!show)}>Tilaa</button>             </div>\r\n            {show &&\r\n            <div>\r\n            <Overview/>\r\n            </div>}\r\n\r\n        </div>\r\n \r\n\r\n        \r\n    )\r\n}\r\nexport {ContactForm}","import React, {useState} from \"react\";\r\nimport products from \"./product_data\";\r\nimport Products from \"./Products\";\r\nimport resetAmount from \"./Products\"\r\nimport {ContactForm} from \"./ContactForm\"\r\n\r\nconst Cart = ({ product, cartProducts, setCartProducts }) => {\r\n    const [show1, setShow1] = useState(false)\r\n    return (\r\n        <div className=\"cartpart\">\r\n            <h2>Cart</h2>\r\n\r\n            {cartProducts.filter(product => products.amount > 0).map(product => <Products key={products.id} amount={products.amount} product={product} />)}\r\n\r\n                       \r\n\r\n            {cartProducts.map(product => {\r\n                if (product.amount > 0) {\r\n                    return (\r\n                        <div className=\"flex-container\">\r\n                            <form className=\"cart\">\r\n                                <img className=\"cartPic\" src={product.url} alt=\"kuva\" />\r\n                                <p className=\"cartName\">{product.name} </p>\r\n                                <p className=\"cartInfo\">{product.info}</p>\r\n                                <p className=\"cartAmount\"> Amount: {product.amount} </p>\r\n                                <p className=\"cartPrice\">{product.price} €</p> \r\n                            </form>       \r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n            })}\r\n                <div className=\"total\">\r\n                    Total: \r\n                {cartProducts.filter(product => product.amount > 0).map(product => product.price * product.amount).reduce((a, b) => a + b, 0)}\r\n                    €\r\n           \r\n                 <button onClick={() => setShow1(!show1)}>Vahvista tilaus</button> \r\n                </div>\r\n                 {show1 &&\r\n                <ContactForm/>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport products2 from \"./components/product_data\";\r\nimport Navbar from './components/Navbar';\r\nimport Products from \"./components/Products\";\r\nimport Cart from \"./components/Cart\"\r\n\r\n  \r\nfunction App() {\r\n  \r\n  const [ cartProducts, setCartProducts] = useState(products2);\r\n\r\n\r\n  return (\r\n   \r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <h1>Merch</h1>\r\n    </header>\r\n    <Navbar/> <br/>\r\n\r\n    <section>\r\n      <Products cartProducts={cartProducts} setCartProducts={setCartProducts} />\r\n      <Cart cartProducts = {cartProducts} setCartProducts={setCartProducts}/>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}